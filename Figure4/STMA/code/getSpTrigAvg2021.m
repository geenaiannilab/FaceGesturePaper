function [avg_r,std_r, nSpikes] = getSpTrigAvg2021(onePixel, spikeTimesAdj, framesLowerBound, framesUpperBound, directionality, windowSize,postSpikeFrames)

%PURPOSE: generate your "average stimulus" vector for STMA
%         generate a 1 x(behavioral sampling rate x windowSize) +1) vector of
%                   average illumination derivative values 
%                    -- each value is the average delta illumination at a single pixel, at a 
%                          certain frame# prior the spike, averaged over all spiketimes  

%INPUT: spikes_times_adj = spiketimes with thoseoutside of FT2 pulse
%                       deleted (generated by getFrameBounds4STMA.m)
%       onePixel = 1 x nFrames vector of a single pixel's illuminance 
%                   derivative timeseries 
%       incompleteAVIflag = 0/1; if not all frames exported from Motive; 
%                           important for deleting spiketimes occuring
%                           outside of range
%       frameStart/End = first/last frames exported from Motive
%       frame_lowerBound = 1 x nSpikes vector of frame#s that correspond to
%                           1 second prior to each spike time 
%       frame_upperBound = 1 x nSpikes vector of frame#s that correspond
%                           to ~0.0083 seconds prior to each spike time (chose this value to
%                           be very close to spike time & also 1 frame prior, at 120 hz bhvl
%                           sampling) 
%       windowSize = period to examine prior to a spike
%       

% OUTPUT: avg_r/std_r = 1 x ((behavioral sampling rate x windowSize) +1) vector of
%                   average illumination derivative values 
%                    -- each value is the average delta illumination at a single pixel, at a 
%                          certain frame# prior the spike, averaged over all spiketimes  
%         nSpikes = number of spikes over which you are averaging



if strcmpi(directionality, 'pre')
    pre = 1;
    post = 0;
elseif strcmpi(directionality, 'post')
    pre = 0;
    post = 1;
else
    disp('check directionality input; may be either PRE or POST');
end

nSpikes = numel(find(spikeTimesAdj)); %number of spikes occuring within FT2 pulse 
avg = nan(nSpikes, postSpikeFrames); %+2; %preallocation 

counter = 1;

%for each spike, use frame_upper & frame_lower to index into onePixel
%(single pixel's illumin. derivative "time series") & return illumin deriv
%value at that frame & store in "avg" 

 for i = 1:nSpikes
    try
        stim = onePixel(framesLowerBound(i)-1:framesUpperBound(i)-1);
                %subtract 1 frame since "frame 1" of the differential intensity refers to frame2-frame1; so "occurred" at time stamp of frame2 
                % this returns single pixels deriv from frameLowerBound -1
                % to frameUpperBound -1, and averages it
    
    %fill in running average 
    avg(counter,1:numel(stim))  = stim;
    counter = counter +1;
    catch ME
    end
 end
 
avg_r = sum(avg)./nSpikes; %divide sum of stimulus at that window, by N spike events, to get real average
std_r = std(avg,0,1);


